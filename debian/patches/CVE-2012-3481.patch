Description: denial of service and possible code execution via
 crafted GIF image file
Origin: upstream, http://git.gnome.org/browse/gimp/commit/plug-ins/common/file-gif-load.c?id=d95c2f0bcb6775bdee2bef35b7d84f6dfd490783
Origin: upstream, http://git.gnome.org/browse/gimp/commit/plug-ins/common/file-gif-load.c?id=43fc9dbd8e2196944c8a71321e525b89b7df9f5c
Bug-Debian: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=685397
Bug-RedHat: https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2012-3481

Index: gimp-2.6.12/plug-ins/common/file-gif-load.c
===================================================================
--- gimp-2.6.12.orig/plug-ins/common/file-gif-load.c	2012-01-31 08:50:15.000000000 -0500
+++ gimp-2.6.12/plug-ins/common/file-gif-load.c	2012-09-05 13:39:47.626228043 -0400
@@ -1028,10 +1028,17 @@
   cur_progress = 0;
   max_progress = height;
 
+  if (len > (G_MAXSIZE / height / (alpha_frame ? (promote_to_rgb ? 4 : 2) : 1)))
+  {
+    g_message ("'%s' has a larger image size than GIMP can handle.",
+               gimp_filename_to_utf8 (filename));
+    return -1;
+  }
+
   if (alpha_frame)
-    dest = (guchar *) g_malloc (len * height * (promote_to_rgb ? 4 : 2));
+    dest = (guchar *) g_malloc ((gsize)len * (gsize)height * (promote_to_rgb ? 4 : 2));
   else
-    dest = (guchar *) g_malloc (len * height);
+    dest = (guchar *) g_malloc ((gsize)len * (gsize)height);
 
 #ifdef GIFDEBUG
     g_print ("GIF: reading %d by %d%s GIF image, ncols=%d\n",
